name: Create Build Tag on Merge to Main

on:
  push:
    branches:
      - main

jobs:
  create_build_tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: composer ci

      - name: Create initial tag if no tag exists
        id: first_tag
        run: |
          git fetch --tags
          if [[ -z $(git tag --list) ]]; then            
            TAG="0.0.0-0"
            echo "No tags found. Creating initial tag: $TAG"
            git tag "$TAG"
            git push https://bhcosta90:${{ secrets.HASH_TOKEN }}@github.com/Quantum-Tecnology/Actions.git "$TAG"
            echo "Tag created successfully: $TAG"
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            echo "Tags already exist. Skipping tag creation."
            echo "exists=true" >> $GITHUB_OUTPUT
          fi
      - name: Get latest stable version
        id: stable
        if: steps.first_tag.outputs.exists == 'true'
        run: |
          git fetch --tags
          latest=$(git tag --list --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?$' | head -n 1)
          IFS='-' read -r -a TAG_STABLE <<< "$latest"
          IFS='.' read -r -a VERSION <<< "${TAG_STABLE[0]}"

          echo "version=${VERSION[0]}"
          echo "minor=${VERSION[1]}"
          echo "patch=${VERSION[2]}"
          
          echo "LATEST_TAG=${VERSION[0]}.${VERSION[1]}.${VERSION[2]}" >> $GITHUB_ENV

      - name: Get next build number
        id: build
        if: steps.first_tag.outputs.exists == 'true'
        run: |
          echo "LATEST_TAG from environment: ${{ env.LATEST_TAG }}"
          prefix=$LATEST_TAG
          git fetch --tags
          count=$(git tag --sort=-v:refname | grep -E "^$prefix-[0-9]+$" | wc -l)
          NEW_TAG="$prefix-$count"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "Next build tag will be: $NEW_TAG"

      - name: Push new tag
        if: steps.first_tag.outputs.exists == 'true'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git tag "${{ env.NEW_TAG }}"
          git remote set-url origin https://bhcosta90:${GH_PAT}@github.com/Quantum-Tecnology/Actions.git
          git push origin "${{ env.NEW_TAG }}"